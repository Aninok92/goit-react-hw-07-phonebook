{"version":3,"sources":["components/ContactItem/ContactItem.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.module.scss","components/Container/Container.module.scss","components/Button/ButtonTypeButton.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Button/ButtonTypeButton.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/App/App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","response","addContacts","name","number","contact","id","nanoid","post","deleteContacts","delete","items","createReducer","contactsOperations","fulfilled","payload","state","filter","loading","pending","rejected","error","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Container","children","className","s","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","reset","nameInputId","numberInputId","form","onSubmit","preventDefault","normalizedName","some","alert","label","htmlFor","labelText","input","type","placeholder","onChange","pattern","title","required","button","disabled","Button","onClick","defaultProps","ContactItem","wrapper","size","fill","ContactList","useEffect","list","length","map","item","onDeleteContact","Filter","autoComplete","Section","section","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b4470e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactItem_wrapper__2lNEq\",\"contact\":\"ContactItem_contact__3Q5ey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__dXeNT\",\"labelText\":\"Filter_labelText__b1ss9\",\"input\":\"Filter_input__SafOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__8_mgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1uakb\",\"title\":\"Section_title__1KMy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2O-KH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonTypeButton_button__35e8a\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nconst fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get(\"/contacts\")();\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response);\r\n    }\r\n  }\r\n);\r\n\r\nconst addContacts = createAsyncThunk(\r\n  \"contacts/addContacts\",\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const contact = {\r\n        id: nanoid(),\r\n        name,\r\n        number,\r\n      };\r\n\r\n      const { data } = await axios.post(`/contacts`, contact);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response);\r\n    }\r\n  }\r\n);\r\n\r\nconst deleteContacts = createAsyncThunk(\r\n  \"contacts/deleteContacts\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response);\r\n    }\r\n  }\r\n);\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { changeFilter } from \"./contacts-actions\";\r\n\r\nimport contactsOperations from \"./contacts-operations\";\r\n\r\nconst items = createReducer([], {\r\n  [contactsOperations.fetchContacts.fulfilled]: (_, payload) => payload,\r\n  [contactsOperations.addContacts.fulfilled]: (state, { payload }) => [\r\n    payload,\r\n    ...state,\r\n  ],\r\n  [contactsOperations.deleteContacts.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsOperations.fetchContacts.pending]: () => true,\r\n  [contactsOperations.fetchContacts.fulfilled]: () => false,\r\n  [contactsOperations.fetchContacts.rejected]: () => false,\r\n\r\n  [contactsOperations.addContacts.pending]: () => true,\r\n  [contactsOperations.addContacts.fulfilled]: () => false,\r\n  [contactsOperations.addContacts.rejected]: () => false,\r\n\r\n  [contactsOperations.deleteContacts.pending]: () => true,\r\n  [contactsOperations.deleteContacts.fulfilled]: () => false,\r\n  [contactsOperations.deleteContacts.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [contactsOperations.fetchContacts.rejected]: (_, action) => action.payload,\r\n  [contactsOperations.fetchContacts.pending]: () => null,\r\n\r\n  [contactsOperations.addContacts.rejected]: (_, action) => action.payload,\r\n  [contactsOperations.addContacts.pending]: () => null,\r\n\r\n  [contactsOperations.deleteContacts.rejected]: (_, action) => action.payload,\r\n  [contactsOperations.deleteContacts.pending]: () => null,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: contactsReducer,\r\n//   },\r\n// });\r\n\r\n// export default { store };\r\n\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default { store };\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.Container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./ContactForm.module.scss\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const normalizedName = name.toLowerCase();\r\n    if (\r\n      contacts.some(\r\n        (contact) =>\r\n          contact.name.toLowerCase() === normalizedName ||\r\n          contact.number === number\r\n      )\r\n    ) {\r\n      alert(\r\n        `Contact with such ${name} name or ${number} number is already in Phonebook`\r\n      );\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContacts({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label} htmlFor={nameInputId}>\r\n        <span className={s.labelText}>Name</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Adrian\"\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={nameInputId}\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={numberInputId}>\r\n        <span className={s.labelText}>Number</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"123-456-789\"\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={numberInputId}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button} disabled={!name || !number}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      namber: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ButtonTypeButton.module.scss\";\r\n\r\nconst Button = ({ children, onClick }) => (\r\n  <button type=\"button\" className={s.button} onClick={onClick}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport s from \"./ContactItem.module.scss\";\r\n\r\nconst ContactItem = ({ name, number }) => (\r\n  <div className={s.wrapper}>\r\n    <BsFillPersonFill size=\"28\" fill=\"#87CEEB\" />\r\n    <p className={s.contact}>{name}</p>\r\n    <p className={s.contact}>{number}</p>\r\n  </div>\r\n);\r\n\r\nContactItem.propTypes = {\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport Button from \"../Button/ButtonTypeButton\";\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\nimport s from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = (id) =>\r\n    dispatch(contactsOperations.deleteContacts(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.length > 0 &&\r\n        contacts.map(({ id, name, number }) => (\r\n          <li className={s.item} key={id}>\r\n            <ContactItem name={name} number={number} />\r\n            <Button onClick={() => onDeleteContact(id)}>\r\n              <ImBin /> Delete\r\n            </Button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./Filter.module.scss\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.labelText}>Find contacts by name</span>\r\n      <input\r\n        name=\"name\"\r\n        placeholder=\"Leo\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        autoComplete=\"off\"\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.scss\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={s.section}>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","//import React, { useState, useEffect } from \"react\";\nimport Container from \"../Container/Container\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport Section from \"../Section/Section\";\n\nfunction App() {\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.module.scss\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__335Ox\",\"label\":\"ContactForm_label__3OheR\",\"labelText\":\"ContactForm_labelText__2HWaQ\",\"input\":\"ContactForm_input__2s3Zf\"};"],"sourceRoot":""}