{"version":3,"sources":["components/ContactItem/ContactItem.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.module.scss","components/Container/Container.module.scss","components/Button/ButtonTypeButton.module.scss","components/Loader/Loader.module.scss","components/ContactForm/ContactForm.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Button/ButtonTypeButton.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/App/App.js","components/Loader/Loader.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","s","axios","defaults","baseURL","name","number","dispatch","contact","nanoid","post","then","data","catch","delete","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","useDispatch","handleChange","e","target","value","reset","nameInputId","numberInputId","form","onSubmit","preventDefault","normalizedName","some","alert","contactsOperations","label","htmlFor","labelText","input","type","placeholder","onChange","pattern","title","required","button","disabled","Button","onClick","defaultProps","ContactItem","wrapper","size","fill","ContactList","list","map","item","onDeleteContact","Filter","autoComplete","Section","section","App","LoaderContainer","loaderContainer","color","height","width","timeout","ReactDOM","render","StrictMode","Loader","document","getElementById"],"mappings":"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","file":"static/js/main.1e60804d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactItem_wrapper__2lNEq\",\"contact\":\"ContactItem_contact__3Q5ey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__dXeNT\",\"labelText\":\"Filter_labelText__b1ss9\",\"input\":\"Filter_input__SafOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__8_mgW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1uakb\",\"title\":\"Section_title__1KMy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2O-KH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonTypeButton_button__35e8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__2MNos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__335Ox\",\"label\":\"ContactForm_label__3OheR\",\"labelText\":\"ContactForm_labelText__2HWaQ\",\"input\":\"ContactForm_input__2s3Zf\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\r\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\r\nexport const addContactsError = createAction(\"contacts/addContactsError\");\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  \"contacts/deleteContactsRequest\"\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  \"contacts/deleteContactsSuccess\"\r\n);\r\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, payload) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n// import { configureStore } from \"@reduxjs/toolkit\";\r\n// import contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: contactsReducer,\r\n//   },\r\n// });\r\n\r\n// export default { store };\r\n\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\", \"loading\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.Container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./contacts-actions\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContacts = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    id: nanoid(),\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch((error) => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst deleteContacts = (id) => (dispatch) => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactsSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactsError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./ContactForm.module.scss\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const normalizedName = name.toLowerCase();\r\n    if (\r\n      contacts.some(\r\n        (contact) =>\r\n          contact.name.toLowerCase() === normalizedName ||\r\n          contact.number === number\r\n      )\r\n    ) {\r\n      alert(\r\n        `Contact with such ${name} name or ${number} number is already in Phonebook`\r\n      );\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContacts(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label} htmlFor={nameInputId}>\r\n        <span className={s.labelText}>Name</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Adrian\"\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={nameInputId}\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={numberInputId}>\r\n        <span className={s.labelText}>Number</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"123-456-789\"\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={numberInputId}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button} disabled={!name || !number}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      namber: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ButtonTypeButton.module.scss\";\r\n\r\nconst Button = ({ children, onClick }) => (\r\n  <button type=\"button\" className={s.button} onClick={onClick}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport s from \"./ContactItem.module.scss\";\r\n\r\nconst ContactItem = ({ name, number }) => (\r\n  <div className={s.wrapper}>\r\n    <BsFillPersonFill size=\"28\" fill=\"#87CEEB\" />\r\n    <p className={s.contact}>{name}</p>\r\n    <p className={s.contact}>{number}</p>\r\n  </div>\r\n);\r\n\r\nContactItem.propTypes = {\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from \"prop-types\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport Button from \"../Button/ButtonTypeButton\";\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\nimport s from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = (id) =>\r\n    dispatch(contactsOperations.deleteContacts(id));\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <ContactItem name={name} number={number} />\r\n          <Button onClick={() => onDeleteContact(id)}>\r\n            <ImBin /> Delete\r\n          </Button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./Filter.module.scss\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.labelText}>Find contacts by name</span>\r\n      <input\r\n        name=\"name\"\r\n        placeholder=\"Leo\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        autoComplete=\"off\"\r\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.scss\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={s.section}>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","//import React, { useState, useEffect } from \"react\";\nimport Container from \"../Container/Container\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport Section from \"../Section/Section\";\n\nfunction App() {\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import Loader from \"react-loader-spinner\";\r\nimport s from \"./Loader.module.scss\";\r\n\r\nconst LoaderContainer = () => {\r\n  return (\r\n    <div className={s.loaderContainer}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#008b8b\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderContainer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.module.scss\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./components/App/App\";\nimport Loader from \"./components/Loader/Loader\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<Loader />} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}